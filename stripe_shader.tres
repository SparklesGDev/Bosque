[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 17

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "Stripe_Count"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeVectorInterp" id=8]

[sub_resource type="VisualShaderNodeColorUniform" id=9]
uniform_name = "End_Color"

[sub_resource type="VisualShaderNodeColorUniform" id=10]
uniform_name = "Start_Color"

[resource]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec4 Start_Color : hint_color;
uniform vec4 End_Color : hint_color;
uniform float Stripe_Count;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:9
	vec3 n_out9p0;
	float n_out9p1;
	n_out9p0 = Start_Color.rgb;
	n_out9p1 = Start_Color.a;

// ColorUniform:8
	vec3 n_out8p0;
	float n_out8p1;
	n_out8p0 = End_Color.rgb;
	n_out8p1 = End_Color.a;

// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// VectorDecompose:6
	float n_out6p0;
	float n_out6p1;
	float n_out6p2;
	n_out6p0 = n_out3p0.x;
	n_out6p1 = n_out3p0.y;
	n_out6p2 = n_out3p0.z;

// ScalarUniform:15
	float n_out15p0;
	n_out15p0 = Stripe_Count;

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out6p1 * n_out15p0;

// ScalarFunc:11
	float n_out11p0;
	n_out11p0 = fract(n_out12p0);

// ScalarOp:14
	float n_in14p1 = 2.00000;
	float n_out14p0;
	n_out14p0 = n_out11p0 * n_in14p1;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = floor(n_out14p0);

// VectorInterp:7
	vec3 n_out7p0;
	n_out7p0 = mix( n_out9p0 , n_out8p0 , vec3(n_out13p0) );

// Output:0
	COLOR.rgb = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -142, -76 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/vertex/0/position = Vector2( 920, 300 )
nodes/fragment/0/position = Vector2( 720, 160 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -600, 280 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -440, 280 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 540, 160 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 340, 160 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 340, 40 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -40, 280 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -220, 280 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 340, 280 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 160, 280 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -420, 380 )
nodes/fragment/connections = PoolIntArray( 3, 0, 6, 0, 7, 0, 0, 0, 8, 0, 7, 1, 9, 0, 7, 0, 6, 1, 12, 0, 12, 0, 11, 0, 13, 0, 7, 2, 11, 0, 14, 0, 14, 0, 13, 0, 15, 0, 12, 1 )
